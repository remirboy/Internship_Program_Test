// Generated by Selenium IDE
using System.Threading;
using NUnit.Framework;
using Internship_Tests.Models;
using Internship_Tests.Tests;

[TestFixture]
public class RegistrationformtestTest : BaseTest
{

  [Test]
  public void RegistrationFormPasswordValidationChechking()
    {

        // Only numbers, non valid
        User user = new User("John", "Snow", "remirboyziatdinov2@yandex.ru", "123456");

        app.LoginHelper.MoveToRegistrationForm();


        app.LoginHelper.Registrate(user);

        // Only big litaries, non valid
        user.Password = "THEUSR";
        app.LoginHelper.Registrate(user);

        Assert.AreEqual(false, app.LoginHelper.IsUserCredentialsIsValid());

        // Only small litaries, non valid
        user.Password = "theusr";
        app.LoginHelper.Registrate(user);

        Assert.AreEqual(false, app.LoginHelper.IsUserCredentialsIsValid());

        // Only big and small litaries, non valid
        user.Password = "Theusr";
        app.LoginHelper.Registrate(user);

        Assert.AreEqual(false, app.LoginHelper.IsUserCredentialsIsValid());

        // Only numbers and small litaries, non valid
        user.Password = "theus1";
        app.LoginHelper.Registrate(user);

        Assert.AreEqual(false, app.LoginHelper.IsUserCredentialsIsValid());


        // Only numbers and big litaries, non valid
        user.Password = "THEUS2";
        app.LoginHelper.Registrate(user);

        Assert.AreEqual(false, app.LoginHelper.IsUserCredentialsIsValid());

        //// Length is less then 6, non valid
        user.Password = "Theu1";
        app.LoginHelper.Registrate(user);

        Assert.AreEqual(false, app.LoginHelper.IsUserCredentialsIsValid());

        //// Length is more or equals 6, there is at least one number, big and small litary, valid
        user.Password = "Theu3s";
        app.LoginHelper.Registrate(user);

        Assert.AreEqual(true, app.LoginHelper.IsUserCredentialsIsValid());

        app.LoginHelper.MoveToLoginForm();

        app.LoginHelper.Login(user);

        Assert.AreEqual(user.FirstName + " " + user.LastName, app.StreamHelper.GetUserName());     
    }
}
